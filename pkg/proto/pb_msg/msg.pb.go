// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: pb_msg/msg.proto

package pb_msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	pb_enum "lark/pkg/proto/pb_enum"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic    pb_enum.TOPIC        `protobuf:"varint,1,opt,name=topic,proto3,enum=pb_enum.TOPIC" json:"topic,omitempty"`
	SubTopic pb_enum.SUB_TOPIC    `protobuf:"varint,2,opt,name=sub_topic,json=subTopic,proto3,enum=pb_enum.SUB_TOPIC" json:"sub_topic,omitempty"`
	MsgType  pb_enum.MESSAGE_TYPE `protobuf:"varint,3,opt,name=msg_type,json=msgType,proto3,enum=pb_enum.MESSAGE_TYPE" json:"msg_type,omitempty"`
	Data     []byte               `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{0}
}

func (x *Packet) GetTopic() pb_enum.TOPIC {
	if x != nil {
		return x.Topic
	}
	return pb_enum.TOPIC(0)
}

func (x *Packet) GetSubTopic() pb_enum.SUB_TOPIC {
	if x != nil {
		return x.SubTopic
	}
	return pb_enum.SUB_TOPIC(0)
}

func (x *Packet) GetMsgType() pb_enum.MESSAGE_TYPE {
	if x != nil {
		return x.MsgType
	}
	return pb_enum.MESSAGE_TYPE(0)
}

func (x *Packet) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	MsgId int64  `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
}

func (x *MessageResp) Reset() {
	*x = MessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageResp) ProtoMessage() {}

func (x *MessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageResp.ProtoReflect.Descriptor instead.
func (*MessageResp) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{1}
}

func (x *MessageResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MessageResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MessageResp) GetMsgId() int64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

type CliChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CliMsgId       int64                 `protobuf:"varint,1,opt,name=cli_msg_id,json=cliMsgId,proto3" json:"cli_msg_id,omitempty"`
	SenderId       int64                 `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	ReceiverId     int64                 `protobuf:"varint,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	SenderPlatform pb_enum.PLATFORM_TYPE `protobuf:"varint,4,opt,name=sender_platform,json=senderPlatform,proto3,enum=pb_enum.PLATFORM_TYPE" json:"sender_platform,omitempty"`
	ChatId         int64                 `protobuf:"varint,5,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType       pb_enum.CHAT_TYPE     `protobuf:"varint,6,opt,name=chat_type,json=chatType,proto3,enum=pb_enum.CHAT_TYPE" json:"chat_type,omitempty"`
	MsgType        pb_enum.MSG_TYPE      `protobuf:"varint,7,opt,name=msg_type,json=msgType,proto3,enum=pb_enum.MSG_TYPE" json:"msg_type,omitempty"`
	Body           []byte                `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
	SentTs         int64                 `protobuf:"varint,9,opt,name=sent_ts,json=sentTs,proto3" json:"sent_ts,omitempty"`
}

func (x *CliChatMessage) Reset() {
	*x = CliChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliChatMessage) ProtoMessage() {}

func (x *CliChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliChatMessage.ProtoReflect.Descriptor instead.
func (*CliChatMessage) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{2}
}

func (x *CliChatMessage) GetCliMsgId() int64 {
	if x != nil {
		return x.CliMsgId
	}
	return 0
}

func (x *CliChatMessage) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *CliChatMessage) GetReceiverId() int64 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *CliChatMessage) GetSenderPlatform() pb_enum.PLATFORM_TYPE {
	if x != nil {
		return x.SenderPlatform
	}
	return pb_enum.PLATFORM_TYPE(0)
}

func (x *CliChatMessage) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *CliChatMessage) GetChatType() pb_enum.CHAT_TYPE {
	if x != nil {
		return x.ChatType
	}
	return pb_enum.CHAT_TYPE(0)
}

func (x *CliChatMessage) GetMsgType() pb_enum.MSG_TYPE {
	if x != nil {
		return x.MsgType
	}
	return pb_enum.MSG_TYPE(0)
}

func (x *CliChatMessage) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *CliChatMessage) GetSentTs() int64 {
	if x != nil {
		return x.SentTs
	}
	return 0
}

type SrvChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrvMsgId       int64                 `protobuf:"varint,1,opt,name=srv_msg_id,json=srvMsgId,proto3" json:"srv_msg_id,omitempty"`
	CliMsgId       int64                 `protobuf:"varint,2,opt,name=cli_msg_id,json=cliMsgId,proto3" json:"cli_msg_id,omitempty"`
	SenderId       int64                 `protobuf:"varint,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	ReceiverId     int64                 `protobuf:"varint,4,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	SenderPlatform pb_enum.PLATFORM_TYPE `protobuf:"varint,5,opt,name=sender_platform,json=senderPlatform,proto3,enum=pb_enum.PLATFORM_TYPE" json:"sender_platform,omitempty"`
	ChatId         int64                 `protobuf:"varint,6,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ChatType       pb_enum.CHAT_TYPE     `protobuf:"varint,7,opt,name=chat_type,json=chatType,proto3,enum=pb_enum.CHAT_TYPE" json:"chat_type,omitempty"`
	SeqId          int64                 `protobuf:"varint,8,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	MsgFrom        pb_enum.MSG_FROM      `protobuf:"varint,9,opt,name=msg_from,json=msgFrom,proto3,enum=pb_enum.MSG_FROM" json:"msg_from,omitempty"`
	MsgType        pb_enum.MSG_TYPE      `protobuf:"varint,10,opt,name=msg_type,json=msgType,proto3,enum=pb_enum.MSG_TYPE" json:"msg_type,omitempty"`
	Body           []byte                `protobuf:"bytes,11,opt,name=body,proto3" json:"body,omitempty"`
	Status         int32                 `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	SentTs         int64                 `protobuf:"varint,13,opt,name=sent_ts,json=sentTs,proto3" json:"sent_ts,omitempty"`
	SrvTs          int64                 `protobuf:"varint,14,opt,name=srv_ts,json=srvTs,proto3" json:"srv_ts,omitempty"`
}

func (x *SrvChatMessage) Reset() {
	*x = SrvChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SrvChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SrvChatMessage) ProtoMessage() {}

func (x *SrvChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SrvChatMessage.ProtoReflect.Descriptor instead.
func (*SrvChatMessage) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{3}
}

func (x *SrvChatMessage) GetSrvMsgId() int64 {
	if x != nil {
		return x.SrvMsgId
	}
	return 0
}

func (x *SrvChatMessage) GetCliMsgId() int64 {
	if x != nil {
		return x.CliMsgId
	}
	return 0
}

func (x *SrvChatMessage) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *SrvChatMessage) GetReceiverId() int64 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *SrvChatMessage) GetSenderPlatform() pb_enum.PLATFORM_TYPE {
	if x != nil {
		return x.SenderPlatform
	}
	return pb_enum.PLATFORM_TYPE(0)
}

func (x *SrvChatMessage) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SrvChatMessage) GetChatType() pb_enum.CHAT_TYPE {
	if x != nil {
		return x.ChatType
	}
	return pb_enum.CHAT_TYPE(0)
}

func (x *SrvChatMessage) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *SrvChatMessage) GetMsgFrom() pb_enum.MSG_FROM {
	if x != nil {
		return x.MsgFrom
	}
	return pb_enum.MSG_FROM(0)
}

func (x *SrvChatMessage) GetMsgType() pb_enum.MSG_TYPE {
	if x != nil {
		return x.MsgType
	}
	return pb_enum.MSG_TYPE(0)
}

func (x *SrvChatMessage) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *SrvChatMessage) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SrvChatMessage) GetSentTs() int64 {
	if x != nil {
		return x.SentTs
	}
	return 0
}

func (x *SrvChatMessage) GetSrvTs() int64 {
	if x != nil {
		return x.SrvTs
	}
	return 0
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageKey string `protobuf:"bytes,1,opt,name=image_key,json=imageKey,proto3" json:"image_key,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{4}
}

func (x *Image) GetImageKey() string {
	if x != nil {
		return x.ImageKey
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileKey  string `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{5}
}

func (x *File) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *File) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileKey  string `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Audio) Reset() {
	*x = Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio) ProtoMessage() {}

func (x *Audio) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio.ProtoReflect.Descriptor instead.
func (*Audio) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{6}
}

func (x *Audio) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *Audio) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileKey  string `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	ImageKey string `protobuf:"bytes,2,opt,name=image_key,json=imageKey,proto3" json:"image_key,omitempty"`
	FileName string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Duration int32  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{7}
}

func (x *Media) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *Media) GetImageKey() string {
	if x != nil {
		return x.ImageKey
	}
	return ""
}

func (x *Media) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Media) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type Sticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileKey string `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
}

func (x *Sticker) Reset() {
	*x = Sticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sticker) ProtoMessage() {}

func (x *Sticker) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sticker.ProtoReflect.Descriptor instead.
func (*Sticker) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{8}
}

func (x *Sticker) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

type SendChatMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic    pb_enum.TOPIC     `protobuf:"varint,1,opt,name=topic,proto3,enum=pb_enum.TOPIC" json:"topic,omitempty"`
	SubTopic pb_enum.SUB_TOPIC `protobuf:"varint,2,opt,name=sub_topic,json=subTopic,proto3,enum=pb_enum.SUB_TOPIC" json:"sub_topic,omitempty"`
	Msg      *CliChatMessage   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendChatMessageReq) Reset() {
	*x = SendChatMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageReq) ProtoMessage() {}

func (x *SendChatMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageReq.ProtoReflect.Descriptor instead.
func (*SendChatMessageReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{9}
}

func (x *SendChatMessageReq) GetTopic() pb_enum.TOPIC {
	if x != nil {
		return x.Topic
	}
	return pb_enum.TOPIC(0)
}

func (x *SendChatMessageReq) GetSubTopic() pb_enum.SUB_TOPIC {
	if x != nil {
		return x.SubTopic
	}
	return pb_enum.SUB_TOPIC(0)
}

func (x *SendChatMessageReq) GetMsg() *CliChatMessage {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SendChatMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendChatMessageResp) Reset() {
	*x = SendChatMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageResp) ProtoMessage() {}

func (x *SendChatMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageResp.ProtoReflect.Descriptor instead.
func (*SendChatMessageResp) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{10}
}

func (x *SendChatMessageResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendChatMessageResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MessageOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId  int64                 `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SrvMsgId  int64                 `protobuf:"varint,2,opt,name=srv_msg_id,json=srvMsgId,proto3" json:"srv_msg_id,omitempty"`
	Operation pb_enum.MSG_OPERATION `protobuf:"varint,3,opt,name=operation,proto3,enum=pb_enum.MSG_OPERATION" json:"operation,omitempty"`
}

func (x *MessageOperationReq) Reset() {
	*x = MessageOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOperationReq) ProtoMessage() {}

func (x *MessageOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOperationReq.ProtoReflect.Descriptor instead.
func (*MessageOperationReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{11}
}

func (x *MessageOperationReq) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *MessageOperationReq) GetSrvMsgId() int64 {
	if x != nil {
		return x.SrvMsgId
	}
	return 0
}

func (x *MessageOperationReq) GetOperation() pb_enum.MSG_OPERATION {
	if x != nil {
		return x.Operation
	}
	return pb_enum.MSG_OPERATION(0)
}

type MessageOperationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MessageOperationResp) Reset() {
	*x = MessageOperationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOperationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOperationResp) ProtoMessage() {}

func (x *MessageOperationResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOperationResp.ProtoReflect.Descriptor instead.
func (*MessageOperationResp) Descriptor() ([]byte, []int) {
	return file_pb_msg_msg_proto_rawDescGZIP(), []int{12}
}

func (x *MessageOperationResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MessageOperationResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_pb_msg_msg_proto protoreflect.FileDescriptor

var file_pb_msg_msg_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x1a, 0x12, 0x70, 0x62, 0x5f, 0x65,
	0x6e, 0x75, 0x6d, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5,
	0x01, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x2f, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x55, 0x42,
	0x5f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x30, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x6d,
	0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x73, 0x67,
	0x49, 0x64, 0x22, 0xd2, 0x02, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x4d, 0x73,
	0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x73, 0x22, 0xe4, 0x03, 0x0a, 0x0e, 0x53, 0x72, 0x76, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x72,
	0x76, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x72, 0x76, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x48, 0x41, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x2e, 0x4d, 0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x74, 0x54, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x76, 0x5f, 0x74,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x72, 0x76, 0x54, 0x73, 0x22, 0x24,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x22, 0x3e, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24,
	0x0a, 0x07, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x53,
	0x55, 0x42, 0x5f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3b, 0x0a, 0x13,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x0a, 0x73, 0x72, 0x76, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x72, 0x76, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x4d, 0x53, 0x47, 0x5f, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x32, 0xa4, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0f,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70,
	0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x1e, 0x5a, 0x1c, 0x6c, 0x61, 0x72, 0x6b, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67,
	0x3b, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_msg_msg_proto_rawDescOnce sync.Once
	file_pb_msg_msg_proto_rawDescData = file_pb_msg_msg_proto_rawDesc
)

func file_pb_msg_msg_proto_rawDescGZIP() []byte {
	file_pb_msg_msg_proto_rawDescOnce.Do(func() {
		file_pb_msg_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_msg_msg_proto_rawDescData)
	})
	return file_pb_msg_msg_proto_rawDescData
}

var file_pb_msg_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pb_msg_msg_proto_goTypes = []interface{}{
	(*Packet)(nil),               // 0: pb_msg.Packet
	(*MessageResp)(nil),          // 1: pb_msg.MessageResp
	(*CliChatMessage)(nil),       // 2: pb_msg.CliChatMessage
	(*SrvChatMessage)(nil),       // 3: pb_msg.SrvChatMessage
	(*Image)(nil),                // 4: pb_msg.Image
	(*File)(nil),                 // 5: pb_msg.File
	(*Audio)(nil),                // 6: pb_msg.Audio
	(*Media)(nil),                // 7: pb_msg.Media
	(*Sticker)(nil),              // 8: pb_msg.Sticker
	(*SendChatMessageReq)(nil),   // 9: pb_msg.SendChatMessageReq
	(*SendChatMessageResp)(nil),  // 10: pb_msg.SendChatMessageResp
	(*MessageOperationReq)(nil),  // 11: pb_msg.MessageOperationReq
	(*MessageOperationResp)(nil), // 12: pb_msg.MessageOperationResp
	(pb_enum.TOPIC)(0),           // 13: pb_enum.TOPIC
	(pb_enum.SUB_TOPIC)(0),       // 14: pb_enum.SUB_TOPIC
	(pb_enum.MESSAGE_TYPE)(0),    // 15: pb_enum.MESSAGE_TYPE
	(pb_enum.PLATFORM_TYPE)(0),   // 16: pb_enum.PLATFORM_TYPE
	(pb_enum.CHAT_TYPE)(0),       // 17: pb_enum.CHAT_TYPE
	(pb_enum.MSG_TYPE)(0),        // 18: pb_enum.MSG_TYPE
	(pb_enum.MSG_FROM)(0),        // 19: pb_enum.MSG_FROM
	(pb_enum.MSG_OPERATION)(0),   // 20: pb_enum.MSG_OPERATION
}
var file_pb_msg_msg_proto_depIdxs = []int32{
	13, // 0: pb_msg.Packet.topic:type_name -> pb_enum.TOPIC
	14, // 1: pb_msg.Packet.sub_topic:type_name -> pb_enum.SUB_TOPIC
	15, // 2: pb_msg.Packet.msg_type:type_name -> pb_enum.MESSAGE_TYPE
	16, // 3: pb_msg.CliChatMessage.sender_platform:type_name -> pb_enum.PLATFORM_TYPE
	17, // 4: pb_msg.CliChatMessage.chat_type:type_name -> pb_enum.CHAT_TYPE
	18, // 5: pb_msg.CliChatMessage.msg_type:type_name -> pb_enum.MSG_TYPE
	16, // 6: pb_msg.SrvChatMessage.sender_platform:type_name -> pb_enum.PLATFORM_TYPE
	17, // 7: pb_msg.SrvChatMessage.chat_type:type_name -> pb_enum.CHAT_TYPE
	19, // 8: pb_msg.SrvChatMessage.msg_from:type_name -> pb_enum.MSG_FROM
	18, // 9: pb_msg.SrvChatMessage.msg_type:type_name -> pb_enum.MSG_TYPE
	13, // 10: pb_msg.SendChatMessageReq.topic:type_name -> pb_enum.TOPIC
	14, // 11: pb_msg.SendChatMessageReq.sub_topic:type_name -> pb_enum.SUB_TOPIC
	2,  // 12: pb_msg.SendChatMessageReq.msg:type_name -> pb_msg.CliChatMessage
	20, // 13: pb_msg.MessageOperationReq.operation:type_name -> pb_enum.MSG_OPERATION
	9,  // 14: pb_msg.Message.SendChatMessage:input_type -> pb_msg.SendChatMessageReq
	11, // 15: pb_msg.Message.MessageOperation:input_type -> pb_msg.MessageOperationReq
	10, // 16: pb_msg.Message.SendChatMessage:output_type -> pb_msg.SendChatMessageResp
	12, // 17: pb_msg.Message.MessageOperation:output_type -> pb_msg.MessageOperationResp
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pb_msg_msg_proto_init() }
func file_pb_msg_msg_proto_init() {
	if File_pb_msg_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_msg_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SrvChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOperationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_msg_msg_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_msg_msg_proto_goTypes,
		DependencyIndexes: file_pb_msg_msg_proto_depIdxs,
		MessageInfos:      file_pb_msg_msg_proto_msgTypes,
	}.Build()
	File_pb_msg_msg_proto = out.File
	file_pb_msg_msg_proto_rawDesc = nil
	file_pb_msg_msg_proto_goTypes = nil
	file_pb_msg_msg_proto_depIdxs = nil
}
