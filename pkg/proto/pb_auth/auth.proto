syntax ="proto3";
import "pb_enum/enum.proto";
import "pb_user/user.proto";
package pb_auth;
option go_package = "./pb_auth;pb_auth";

message RegisterReq {
  pb_enum.PLATFORM_TYPE  reg_platform = 1; // 注册平台
  string nickname = 2; // 昵称
  string password = 3; // 密码
  string firstname = 4; // firstname
  string lastname = 5; // lastname
  int32 gender = 6; // 性别
  int64 birth_ts = 7; // 生日
  string email = 8; // Email
  string mobile = 9; // 手机号
  string avatar_url = 10; // 头像
  int64 city_id = 11; // 城市ID
  int64 code = 12; // 验证码
}

message RegisterResp {
  int32 code = 1;
  string msg = 2;
  pb_user.UserInfo user_info = 3;
  Token token = 4;
}


message LoginReq {
  pb_enum.ACCOUNT_TYPE account_type = 1; // 账户类型 1:手机号 2:lark账户
  pb_enum.PLATFORM_TYPE platform = 2; // 平台
  string account = 3; // 手机号/lark账户
  string udid = 4; // 设备唯一编号
  string verification_code = 5; // 验证码
  string password = 6; // 密码
}

message LoginResp {
  int32 code = 1;
  string msg = 2;
  pb_user.UserInfo user_info = 3;
  Token token = 4;
}


message NewTokenReq {
  int64  uid = 1; // uid
  pb_enum.PLATFORM_TYPE  platform = 2; // 平台
}

message NewTokenResp {
  int32 code = 1;
  string msg = 2;
  Token token = 3;
}

message Token {
  string token = 1; // 用户token
  int64  expire = 2; // token过期时间戳（秒）
}

service Auth {
  rpc Register(RegisterReq)  returns(RegisterResp);
  rpc Login(LoginReq)  returns(LoginResp);
  rpc NewToken(NewTokenReq) returns(NewTokenResp);
}