// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: pb_invite/invite.proto

package pb_invite

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	pb_enum "lark/pkg/proto/pb_enum"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewChatInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId        int64             `protobuf:"varint,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                              // chat ID
	ChatType      pb_enum.CHAT_TYPE `protobuf:"varint,2,opt,name=chat_type,json=chatType,proto3,enum=pb_enum.CHAT_TYPE" json:"chat_type,omitempty"` // 1:私聊/2:群聊
	InitiatorUid  int64             `protobuf:"varint,3,opt,name=initiator_uid,json=initiatorUid,proto3" json:"initiator_uid,omitempty"`            // 发起人 UID
	InviteeUid    int64             `protobuf:"varint,4,opt,name=invitee_uid,json=inviteeUid,proto3" json:"invitee_uid,omitempty"`                  // 被邀请人 UID
	InvitationMsg string            `protobuf:"bytes,5,opt,name=invitation_msg,json=invitationMsg,proto3" json:"invitation_msg,omitempty"`          // 邀请消息
}

func (x *NewChatInviteReq) Reset() {
	*x = NewChatInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_invite_invite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewChatInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewChatInviteReq) ProtoMessage() {}

func (x *NewChatInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_invite_invite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewChatInviteReq.ProtoReflect.Descriptor instead.
func (*NewChatInviteReq) Descriptor() ([]byte, []int) {
	return file_pb_invite_invite_proto_rawDescGZIP(), []int{0}
}

func (x *NewChatInviteReq) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *NewChatInviteReq) GetChatType() pb_enum.CHAT_TYPE {
	if x != nil {
		return x.ChatType
	}
	return pb_enum.CHAT_TYPE(0)
}

func (x *NewChatInviteReq) GetInitiatorUid() int64 {
	if x != nil {
		return x.InitiatorUid
	}
	return 0
}

func (x *NewChatInviteReq) GetInviteeUid() int64 {
	if x != nil {
		return x.InviteeUid
	}
	return 0
}

func (x *NewChatInviteReq) GetInvitationMsg() string {
	if x != nil {
		return x.InvitationMsg
	}
	return ""
}

type NewChatInviteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *NewChatInviteResp) Reset() {
	*x = NewChatInviteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_invite_invite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewChatInviteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewChatInviteResp) ProtoMessage() {}

func (x *NewChatInviteResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_invite_invite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewChatInviteResp.ProtoReflect.Descriptor instead.
func (*NewChatInviteResp) Descriptor() ([]byte, []int) {
	return file_pb_invite_invite_proto_rawDescGZIP(), []int{1}
}

func (x *NewChatInviteResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NewChatInviteResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ChatInviteListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          string                       `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Role         pb_enum.INVITE_ROLE          `protobuf:"varint,2,opt,name=role,proto3,enum=pb_enum.INVITE_ROLE" json:"role,omitempty"` // 角色
	MaxInviteId  int32                        `protobuf:"varint,3,opt,name=max_invite_id,json=maxInviteId,proto3" json:"max_invite_id,omitempty"`
	HandleResult pb_enum.INVITE_HANDLE_RESULT `protobuf:"varint,4,opt,name=handle_result,json=handleResult,proto3,enum=pb_enum.INVITE_HANDLE_RESULT" json:"handle_result,omitempty"` // 结果
	PageSize     int32                        `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ChatInviteListReq) Reset() {
	*x = ChatInviteListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_invite_invite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatInviteListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatInviteListReq) ProtoMessage() {}

func (x *ChatInviteListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_invite_invite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatInviteListReq.ProtoReflect.Descriptor instead.
func (*ChatInviteListReq) Descriptor() ([]byte, []int) {
	return file_pb_invite_invite_proto_rawDescGZIP(), []int{2}
}

func (x *ChatInviteListReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChatInviteListReq) GetRole() pb_enum.INVITE_ROLE {
	if x != nil {
		return x.Role
	}
	return pb_enum.INVITE_ROLE(0)
}

func (x *ChatInviteListReq) GetMaxInviteId() int32 {
	if x != nil {
		return x.MaxInviteId
	}
	return 0
}

func (x *ChatInviteListReq) GetHandleResult() pb_enum.INVITE_HANDLE_RESULT {
	if x != nil {
		return x.HandleResult
	}
	return pb_enum.INVITE_HANDLE_RESULT(0)
}

func (x *ChatInviteListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ChatInviteListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List []*ChatInviteInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ChatInviteListResp) Reset() {
	*x = ChatInviteListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_invite_invite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatInviteListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatInviteListResp) ProtoMessage() {}

func (x *ChatInviteListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_invite_invite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatInviteListResp.ProtoReflect.Descriptor instead.
func (*ChatInviteListResp) Descriptor() ([]byte, []int) {
	return file_pb_invite_invite_proto_rawDescGZIP(), []int{3}
}

func (x *ChatInviteListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChatInviteListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ChatInviteListResp) GetList() []*ChatInviteInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type ChatInviteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteId      int64                        `protobuf:"varint,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	InvitedTs     int64                        `protobuf:"varint,2,opt,name=invited_ts,json=invitedTs,proto3" json:"invited_ts,omitempty"`                                            // 邀请时间
	ChatId        int64                        `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                                                     // chat ID
	ChatType      pb_enum.CHAT_TYPE            `protobuf:"varint,4,opt,name=chat_type,json=chatType,proto3,enum=pb_enum.CHAT_TYPE" json:"chat_type,omitempty"`                        // 1:私聊/2:群聊
	InitiatorUid  int64                        `protobuf:"varint,5,opt,name=initiator_uid,json=initiatorUid,proto3" json:"initiator_uid,omitempty"`                                   // 发起人 UID
	InviteeUid    int64                        `protobuf:"varint,6,opt,name=invitee_uid,json=inviteeUid,proto3" json:"invitee_uid,omitempty"`                                         // 被邀请人 UID
	InvitationMsg string                       `protobuf:"bytes,7,opt,name=invitation_msg,json=invitationMsg,proto3" json:"invitation_msg,omitempty"`                                 // 邀请消息
	HandlerUid    int64                        `protobuf:"varint,8,opt,name=handler_uid,json=handlerUid,proto3" json:"handler_uid,omitempty"`                                         // 处理人 UID
	HandleResult  pb_enum.INVITE_HANDLE_RESULT `protobuf:"varint,9,opt,name=handle_result,json=handleResult,proto3,enum=pb_enum.INVITE_HANDLE_RESULT" json:"handle_result,omitempty"` // 结果
	HandleMsg     string                       `protobuf:"bytes,10,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`                                            // 处理消息
	HandledTs     int64                        `protobuf:"varint,11,opt,name=handled_ts,json=handledTs,proto3" json:"handled_ts,omitempty"`                                           // 处理时间
}

func (x *ChatInviteInfo) Reset() {
	*x = ChatInviteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_invite_invite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatInviteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatInviteInfo) ProtoMessage() {}

func (x *ChatInviteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_invite_invite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatInviteInfo.ProtoReflect.Descriptor instead.
func (*ChatInviteInfo) Descriptor() ([]byte, []int) {
	return file_pb_invite_invite_proto_rawDescGZIP(), []int{4}
}

func (x *ChatInviteInfo) GetInviteId() int64 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

func (x *ChatInviteInfo) GetInvitedTs() int64 {
	if x != nil {
		return x.InvitedTs
	}
	return 0
}

func (x *ChatInviteInfo) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *ChatInviteInfo) GetChatType() pb_enum.CHAT_TYPE {
	if x != nil {
		return x.ChatType
	}
	return pb_enum.CHAT_TYPE(0)
}

func (x *ChatInviteInfo) GetInitiatorUid() int64 {
	if x != nil {
		return x.InitiatorUid
	}
	return 0
}

func (x *ChatInviteInfo) GetInviteeUid() int64 {
	if x != nil {
		return x.InviteeUid
	}
	return 0
}

func (x *ChatInviteInfo) GetInvitationMsg() string {
	if x != nil {
		return x.InvitationMsg
	}
	return ""
}

func (x *ChatInviteInfo) GetHandlerUid() int64 {
	if x != nil {
		return x.HandlerUid
	}
	return 0
}

func (x *ChatInviteInfo) GetHandleResult() pb_enum.INVITE_HANDLE_RESULT {
	if x != nil {
		return x.HandleResult
	}
	return pb_enum.INVITE_HANDLE_RESULT(0)
}

func (x *ChatInviteInfo) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

func (x *ChatInviteInfo) GetHandledTs() int64 {
	if x != nil {
		return x.HandledTs
	}
	return 0
}

type ChatInviteHandleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteId     int64                        `protobuf:"varint,1,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	HandlerUid   int64                        `protobuf:"varint,2,opt,name=handler_uid,json=handlerUid,proto3" json:"handler_uid,omitempty"`                                         // 处理人 UID
	HandleResult pb_enum.INVITE_HANDLE_RESULT `protobuf:"varint,3,opt,name=handle_result,json=handleResult,proto3,enum=pb_enum.INVITE_HANDLE_RESULT" json:"handle_result,omitempty"` // 结果
	HandleMsg    string                       `protobuf:"bytes,4,opt,name=handle_msg,json=handleMsg,proto3" json:"handle_msg,omitempty"`                                             // 处理消息
}

func (x *ChatInviteHandleReq) Reset() {
	*x = ChatInviteHandleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_invite_invite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatInviteHandleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatInviteHandleReq) ProtoMessage() {}

func (x *ChatInviteHandleReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_invite_invite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatInviteHandleReq.ProtoReflect.Descriptor instead.
func (*ChatInviteHandleReq) Descriptor() ([]byte, []int) {
	return file_pb_invite_invite_proto_rawDescGZIP(), []int{5}
}

func (x *ChatInviteHandleReq) GetInviteId() int64 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

func (x *ChatInviteHandleReq) GetHandlerUid() int64 {
	if x != nil {
		return x.HandlerUid
	}
	return 0
}

func (x *ChatInviteHandleReq) GetHandleResult() pb_enum.INVITE_HANDLE_RESULT {
	if x != nil {
		return x.HandleResult
	}
	return pb_enum.INVITE_HANDLE_RESULT(0)
}

func (x *ChatInviteHandleReq) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

type ChatInviteHandleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ChatInviteHandleResp) Reset() {
	*x = ChatInviteHandleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_invite_invite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatInviteHandleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatInviteHandleResp) ProtoMessage() {}

func (x *ChatInviteHandleResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_invite_invite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatInviteHandleResp.ProtoReflect.Descriptor instead.
func (*ChatInviteHandleResp) Descriptor() ([]byte, []int) {
	return file_pb_invite_invite_proto_rawDescGZIP(), []int{6}
}

func (x *ChatInviteHandleResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChatInviteHandleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_pb_invite_invite_proto protoreflect.FileDescriptor

var file_pb_invite_invite_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x62, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x62, 0x5f, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x1a, 0x12, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x73, 0x67, 0x22, 0x39, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xd4,
	0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x49,
	0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x62,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x4e,
	0x44, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x69, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x62, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xa6, 0x03, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x54, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62,
	0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f,
	0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x52, 0x0c, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x54, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x13, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12,
	0x42, 0x0a, 0x0d, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x2e, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x55, 0x4c, 0x54, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d,
	0x73, 0x67, 0x22, 0x3c, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x32, 0xf8, 0x01, 0x0a, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x4e,
	0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x70,
	0x62, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x5f, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x5f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x5f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x17, 0x5a, 0x15, 0x2e,
	0x2f, 0x70, 0x62, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x3b, 0x70, 0x62, 0x5f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_invite_invite_proto_rawDescOnce sync.Once
	file_pb_invite_invite_proto_rawDescData = file_pb_invite_invite_proto_rawDesc
)

func file_pb_invite_invite_proto_rawDescGZIP() []byte {
	file_pb_invite_invite_proto_rawDescOnce.Do(func() {
		file_pb_invite_invite_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_invite_invite_proto_rawDescData)
	})
	return file_pb_invite_invite_proto_rawDescData
}

var file_pb_invite_invite_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pb_invite_invite_proto_goTypes = []interface{}{
	(*NewChatInviteReq)(nil),          // 0: pb_invite.NewChatInviteReq
	(*NewChatInviteResp)(nil),         // 1: pb_invite.NewChatInviteResp
	(*ChatInviteListReq)(nil),         // 2: pb_invite.ChatInviteListReq
	(*ChatInviteListResp)(nil),        // 3: pb_invite.ChatInviteListResp
	(*ChatInviteInfo)(nil),            // 4: pb_invite.ChatInviteInfo
	(*ChatInviteHandleReq)(nil),       // 5: pb_invite.ChatInviteHandleReq
	(*ChatInviteHandleResp)(nil),      // 6: pb_invite.ChatInviteHandleResp
	(pb_enum.CHAT_TYPE)(0),            // 7: pb_enum.CHAT_TYPE
	(pb_enum.INVITE_ROLE)(0),          // 8: pb_enum.INVITE_ROLE
	(pb_enum.INVITE_HANDLE_RESULT)(0), // 9: pb_enum.INVITE_HANDLE_RESULT
}
var file_pb_invite_invite_proto_depIdxs = []int32{
	7,  // 0: pb_invite.NewChatInviteReq.chat_type:type_name -> pb_enum.CHAT_TYPE
	8,  // 1: pb_invite.ChatInviteListReq.role:type_name -> pb_enum.INVITE_ROLE
	9,  // 2: pb_invite.ChatInviteListReq.handle_result:type_name -> pb_enum.INVITE_HANDLE_RESULT
	4,  // 3: pb_invite.ChatInviteListResp.list:type_name -> pb_invite.ChatInviteInfo
	7,  // 4: pb_invite.ChatInviteInfo.chat_type:type_name -> pb_enum.CHAT_TYPE
	9,  // 5: pb_invite.ChatInviteInfo.handle_result:type_name -> pb_enum.INVITE_HANDLE_RESULT
	9,  // 6: pb_invite.ChatInviteHandleReq.handle_result:type_name -> pb_enum.INVITE_HANDLE_RESULT
	0,  // 7: pb_invite.Invite.NewChatInvite:input_type -> pb_invite.NewChatInviteReq
	2,  // 8: pb_invite.Invite.ChatInviteList:input_type -> pb_invite.ChatInviteListReq
	5,  // 9: pb_invite.Invite.ChatInviteHandle:input_type -> pb_invite.ChatInviteHandleReq
	1,  // 10: pb_invite.Invite.NewChatInvite:output_type -> pb_invite.NewChatInviteResp
	3,  // 11: pb_invite.Invite.ChatInviteList:output_type -> pb_invite.ChatInviteListResp
	6,  // 12: pb_invite.Invite.ChatInviteHandle:output_type -> pb_invite.ChatInviteHandleResp
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pb_invite_invite_proto_init() }
func file_pb_invite_invite_proto_init() {
	if File_pb_invite_invite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_invite_invite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewChatInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_invite_invite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewChatInviteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_invite_invite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatInviteListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_invite_invite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatInviteListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_invite_invite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatInviteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_invite_invite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatInviteHandleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_invite_invite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatInviteHandleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_invite_invite_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_invite_invite_proto_goTypes,
		DependencyIndexes: file_pb_invite_invite_proto_depIdxs,
		MessageInfos:      file_pb_invite_invite_proto_msgTypes,
	}.Build()
	File_pb_invite_invite_proto = out.File
	file_pb_invite_invite_proto_rawDesc = nil
	file_pb_invite_invite_proto_goTypes = nil
	file_pb_invite_invite_proto_depIdxs = nil
}
